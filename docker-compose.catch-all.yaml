services:

  traefik:
    image: traefik:v2.7
    command:
    - --log=true
    - --log.level=DEBUG
    - --api.dashboard=true
    - --entrypoints.http.address=:80
    - --providers.docker=true
    - --providers.docker.exposedByDefault=false
    ports:
    - 127.0.0.1:80:80
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /etc/localtime:/etc/localtime:ro
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.entrypoints: http
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.rule: HostRegexp(`traefik.127.0.0.1.nip.io`)

  catch-all:
      image: nginx:stable
      volumes:
      - ./catch-all/pages:/usr/share/nginx/error-pages
      - ./catch-all/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/localtime:/etc/localtime:ro
      labels:
        traefik.enable: "true"
        traefik.http.services.catch-all.loadbalancer.server.port: 80
        traefik.http.routers.catch-all.entrypoints: http
        traefik.http.routers.catch-all.rule: HostRegexp(`{host:.+}`) 
        traefik.http.routers.catch-all.priority: 1
        traefik.http.middlewares.catch-all.errors.status: 404
        traefik.http.middlewares.catch-all.errors.service: catch-all
        traefik.http.middlewares.catch-all.errors.query: /404.html

  www-motd:
      image: nginx:stable
      volumes:
      - ./www-motd/pages:/usr/share/nginx/html
      - ./www-motd/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/localtime:/etc/localtime:ro
      labels:
        traefik.enable: "true"
        traefik.http.services.www-motd.loadbalancer.server.port: 80
        traefik.http.routers.www-motd.entrypoints: http
        traefik.http.routers.www-motd.rule: HostRegexp(`www.127.0.0.1.nip.io`)
        traefik.http.routers.www-motd.priority: 80

  www:
    image: nginx:stable
    volumes:
    - ./www/pages:/usr/share/nginx/html
    - ./www/default.conf:/etc/nginx/conf.d/default.conf
    - /etc/localtime:/etc/localtime:ro
    labels:
      traefik.enable: "true"
      traefik.http.services.www.loadbalancer.server.port: 80
      traefik.http.routers.www.entrypoints: http
      traefik.http.routers.www.rule: HostRegexp(`www.127.0.0.1.nip.io`) && ( HeadersRegexp(`Cookie`, `motd-read=true`) || PathPrefix(`/api/`) )
      traefik.http.routers.www.priority: 100