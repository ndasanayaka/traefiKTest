version: "3.7"

services:

  traefik:
    image: traefik:v2.4
    command:
    - --log=true
    - --log.level=DEBUG
    - --accesslog=true
    - --accesslog.fields.names.StartUTC=drop
    - --api=true
    - --api.insecure=true
    - --api.dashboard=true
    - --ping=true
    - --entrypoints.http.address=:80
    - --entrypoints.metrics.address=:8082
    - --providers.docker=true
    - --providers.docker.exposedByDefault=false
    - --metrics.prometheus=true
    - --metrics.prometheus.addEntryPointsLabels=true
    - --metrics.prometheus.addServicesLabels=true
    - --metrics.prometheus.entrypoint=metrics
    ports:
    - 127.0.0.1:80:80
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /etc/localtime:/etc/localtime:ro
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.services.traefik.loadbalancer.server.port: 8080
      traefik.http.routers.traefik.entrypoints: http
      traefik.http.routers.traefik.rule: HostRegexp(`traefik.127.0.0.1.ip.go-nerd.de`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))

  registry:
    image: registry:2
    ports:
    - "127.0.0.1:5000:5000"
    labels:
      traefik.enable: "true"
      traefik.http.services.registry.loadbalancer.server.port: 5000
      traefik.http.routers.registry.rule: HostRegexp(`registry.127.0.0.1.ip.go-nerd.de`) && PathPrefix(`/v2`)
      traefik.http.routers.registry.entrypoints: http

  web:
    image: konradkleine/docker-registry-frontend:v2
    depends_on:
    - registry
    environment:
      ENV_DOCKER_REGISTRY_HOST: "registry"
      ENV_DOCKER_REGISTRY_PORT: 5000
    labels:
      traefik.enable: "true"
      traefik.http.services.web.loadbalancer.server.port: 80
      traefik.http.routers.web.rule: HostRegexp(`hub.127.0.0.1.ip.go-nerd.de`)
      traefik.http.routers.web.entrypoints: http

  www:
    image: nginx:stable
    labels:
      traefik.enable: "true"
      traefik.http.services.www.loadbalancer.server.port: 80
      traefik.http.routers.www.rule: HostRegexp(`www.127.0.0.1.ip.go-nerd.de`) && HeadersRegexp(`Cookie`, `maintenance-override=true`)
      traefik.http.routers.www.entrypoints: http
      #
      #traefik.http.middlewares.www-latency.circuitbreaker.expression: "LatencyAtQuantileMS(50.0) > 100"
      #
      #traefik.http.middlewares.www.errors.status: 404
      #traefik.http.middlewares.www.errors.service: httpbin
      #traefik.http.middlewares.www.errors.query: /status/404
      #
      #PRIORITY

  httpbin:
    image: kennethreitz/httpbin
    labels:
      traefik.enable: "true"
      traefik.http.services.bin.loadbalancer.server.port: 80
      traefik.http.routers.bin.rule: HostRegexp(`bin.127.0.0.1.ip.go-nerd.de`)
      traefik.http.routers.bin.entrypoints: http
      #traefik.http.middlewares.bin.errors.status: 500-599
      #traefik.http.middlewares.bin.errors.service: httpbin
      #traefik.http.middlewares.bin.errors.query: /anything?error